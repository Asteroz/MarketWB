@using MarketWB.Web.ViewModels.Cabinet.Dashboard
@{
    Layout = "_Layout";
}
@model DashboardSelfCostsVM

<style>
    .table_input{
        width: 100%;
    }
</style>


    <div class="panel box-shadow-none content-header">
        <div class="panel-body">
            <div class="col-md-12">
                <h3 class="animated fadeInLeft">Себестоимости</h3>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="col-md-12 top-20 padding-0">
            <div class="col-md-12">
                <div class="panel">
                    <div class="panel-body">
                        <div class="responsive-table">
                            <table id="datatables-example" class="table table-striped table-bordered" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>ProductId</th>
                                        <th>Закупка</th>
                                        <th>Упаковка</th>
                                        <th>Доставка до вашего склада/до фф</th>
                                        <th>Доставка до склада WB</th>
                                        <th>Услуги фф</th>
                                        <th>Фотограф</th>
                                       @* <th> </th>*@
                                         <div style="display:block;">
                                               @* <button onclick="CreateRow()" style="btn btn-primary">Добавить позицию</button>*@
                                                <button onclick="SaveRows()" class="btn">Сохранить изменения</button>
                                        </div>
                                    </tr>
                                </thead>
                                <tbody id="table_body">
                                     @foreach(var selfCost in Model.User.SelfCosts)
                                     {
                                            <tr data-id="@selfCost.Id">
                                                <td>@selfCost.ProductId</td>
                                                <td><input class="table_input" type="number" value="@selfCost.PurchaseCost"/></td>
                                                <td><input class="table_input" type="number" value="@selfCost.PackagingCost"/></td>
                                                <td><input class="table_input" type="number" value="@selfCost.DeliveryToYourStockCost"/></td>
                                                <td><input class="table_input" type="number" value="@selfCost.DeliveryToWbStockCost"/></td>
                                                <td><input class="table_input" type="number" value="@selfCost.FFServicesCost"/></td>
                                                <td><input class="table_input" type="number" value="@selfCost.PhotographCost"/></td>
                                                @*<td><a><button onclick="DeleteRow(@selfCost.Id)" style="btn btn-danger">Удалить</button></a></td>*@
                                            </tr> 
                                    }                               
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <script>
         async function CreateRow(){

               let response = await fetch('/Cabinet/Dashboard/AddSelfCost', {
                   method: 'PUT',
               });

               let json = await response.json();

               var row = document.createElement('tr');
               row.setAttribute('data-id',json);
              
               let html = '';
               for (let i =0;i<7;i++){
                   html += '<td><input class="table_input" type="number" value="0"/></td>';
               }
               html += ` <td><a><button onclick="DeleteRow(${json})" style="btn btn-danger">Удалить</button></a></td>`;


               row.innerHTML = html;

               let table_body = document.getElementById('table_body');
               table_body.prepend(row);
         }
    
        
         async function DeleteRow(id){

             let response = await fetch('/Cabinet/Dashboard/DeleteSelfCost?id='+id, {
                   method: 'DELETE',
               });

             let table_body = document.getElementById('table_body');
             var row = document.querySelector('tr[data-id="'+id+'"]');
             table_body.removeChild(row);
         }

        async function SaveRows(){
            let table_body = document.getElementById('table_body');
            let rows = table_body.children;

            for (let i =0;i<rows.length;i++){
                let row = rows[i];
                let cells = row.children;
                let model = {
                    Id: new Number(row.getAttribute('data-id')),
                    ProductId: new Number(cells[0].innerHTML),
                    PurchaseCost: new Number(cells[1].children[0].value),
                    PackagingCost: new Number(cells[2].children[0].value),
                    DeliveryToYourStockCost: new Number(cells[3].children[0].value),
                    DeliveryToWbStockCost: new Number(cells[4].children[0].value),
                    FFServicesCost: new Number(cells[5].children[0].value),
                    PhotographCost: new Number(cells[6].children[0].value),
                }
        
        
                let response = await fetch('/Cabinet/Dashboard/UpdateSelfCost', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json;charset=utf-8'
                    },
                    body: JSON.stringify(model)});
            }
        }


    </script>
